name: Terraform Apply

on: [workflow_dispatch]
#on:
#  push:
#    branches:
#    - main
      
  
defaults:
  run:
    working-directory: "./terraform"

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    
    defaults:
      run:
        shell: bash
 
    steps:
      - uses: actions/checkout@v2
#        with:
#           terraform_version: 'latest'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
            terraform_wrapper: true
            terraform_version: 'latest'

      - name: Terraform Init
        run: terraform init
        
      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan
        
#      - name: Terraform Apply
#        run: terraform apply --auto-approve

      - name: Terraform Apply
        id: terraform-apply
        run: | 
            terraform apply --auto-approve
#          Set-Location (Join-Path $env:GITHUB_WORKSPACE terraform) # Task does not support 'working-directory' property
#            terraform apply --auto-approve
#          # Export Terraform output as step output
##          $terraformOutput = (terraform output -json | ConvertFrom-Json -AsHashtable)     
 #         foreach ($key in $terraformOutput.Keys) {
 #           $outputVariableValue = $terraformOutput[$key].value
 #           Write-Output "::set-output name=${key}::${outputVariableValue}"
 #          Write-Output "TF_OUT_${key}=${outputVariableValue}" >> $env:GITHUB_ENV
 #        } 
            
        
 #      - uses: actions/checkout@v2
      
      - name: Install AKS
        run: |
          
           admin_pass=${terraform output admin_pswd}
           echo $admin_pass
            terraform output  
           admin_user=${terraform output admin_username}
           echo $admin_user
#           echo ${terraform output vm_public_ip_address}
